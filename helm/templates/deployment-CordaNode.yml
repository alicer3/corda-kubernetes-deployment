kind: Service
apiVersion: v1
metadata:
  name: {{ .Values.config.resourceName }}-service
  labels:
    app: {{ .Values.config.resourceName }}-service
    group: {{ .Values.config.resourceName }}
    env: {{ .Values.config.env }}
spec:
  loadBalancerIP: "{{ .Values.config.nodeLoadBalancerIP }}"
  type: LoadBalancer
  selector:
    app: {{ .Values.config.resourceName }}-node
    node: {{ .Values.config.resourceName }}
    env: {{ .Values.config.env }}
  ports:
{{- if not .Values.setup.cordaFirewall.enabled }}
  - name: p2p
    protocol: TCP
    port: {{ .Values.corda.node.conf.p2pPort }}
    targetPort: {{ .Values.corda.node.conf.p2pPort }}
{{- end }}
  - name: rpc
    protocol: TCP
    port: {{ .Values.corda.node.conf.rpc.port }}
    targetPort: {{ .Values.corda.node.conf.rpc.port }}
{{- if .Values.corda.node.conf.ssh.enabled }}
  - name: ssh
    protocol: TCP
    port: {{ .Values.corda.node.conf.ssh.sshdPort }}
    targetPort: {{ .Values.corda.node.conf.ssh.sshdPort }}
{{- end }}
---
{{- if .Values.setup.cordaFirewall.enabled }}
kind: Service
apiVersion: v1
metadata:
  name: {{ .Values.config.resourceName }}-node-internal
spec:
  selector:
    app: {{ .Values.config.resourceName }}-node
    group: {{ .Values.config.resourceName }}
    env: {{ .Values.config.env }}
  ports:
  - name: p2p
    protocol: TCP
    port: {{ .Values.corda.node.conf.p2pPort }}
    targetPort: {{ .Values.corda.node.conf.p2pPort }}
---
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.config.resourceName }}-node-deployment
  labels:
    app: {{ .Values.config.resourceName }}-node
    group: {{ .Values.config.resourceName }}
    env: {{ .Values.config.env }}
spec:
  replicas: 1   
  selector:
    matchLabels:
      app: {{ .Values.config.resourceName }}-node
  template:
    metadata:
      labels:
        app: {{ .Values.config.resourceName }}-node
        group: {{ .Values.config.resourceName }}
        env: {{ .Values.config.env }}
    spec:
{{- if .Values.config.storage.awsEBS.enabled }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - {{ .Values.config.storage.node.volumeHost }}
{{- end }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
      - name: {{ .Values.config.resourceName }}-pv
        persistentVolumeClaim:
          claimName: {{ .Values.config.resourceName }}-pvc
      - name: node-config-volume
        configMap:
          name: {{ .Values.config.resourceName }}-corda-configmap
      imagePullSecrets:
      - name: container-registry-secret
      containers:
      - name: {{ .Values.config.resourceName }}
        image: {{ .Values.config.containerRegistry.serverAddress }}/{{ printf .Values.config.dockerImageNode (.Values.setup.cordaVersion | lower) }}
        imagePullPolicy: Always
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        ports:
        - containerPort: {{ .Values.corda.node.conf.p2pPort }}
        - containerPort: {{ .Values.corda.node.conf.rpc.port }}
{{- if .Values.corda.node.conf.ssh.enabled }}
        - containerPort: {{ .Values.corda.node.conf.ssh.sshdPort }}
{{- end }}
        volumeMounts:
        - mountPath: "/opt/corda/workspace"
          name: {{ .Values.config.resourceName }}-pv
        - mountPath: /opt/corda/workspace/ping.sh
          name: node-config-volume
          subPath: ping.sh
          readOnly: true
        - mountPath: /opt/corda/workspace/node.conf
          name: node-config-volume
          subPath: node.conf
          readOnly: true
        - mountPath: /opt/corda/workspace/networkRootTrustStore.jks
          name: node-config-volume
          subPath: networkRootTrustStore.jks
          readOnly: true
        - mountPath: /opt/corda/workspace/certificates/nodekeystore.jks
          name: node-config-volume
          subPath: nodekeystore.jks
          readOnly: true
        - mountPath: /opt/corda/workspace/certificates/sslkeystore.jks
          name: node-config-volume
          subPath: sslkeystore.jks
          readOnly: true
        - mountPath: /opt/corda/workspace/certificates/truststore.jks
          name: node-config-volume
          subPath: truststore.jks
          readOnly: true
        env:
        - name: IDENTITY_MANAGER_ADDRESS
          value: "{{ .Values.corda.node.conf.identityManagerAddress }}"
        - name: NETMAP_ADDRESS
          value: "{{ .Values.corda.node.conf.networkmapAddress }}"
        - name: TRUSTSTORE_PASSWORD
          value: "{{ .Values.corda.node.conf.truststorePassword }}"
